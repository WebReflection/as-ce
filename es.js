self.ce=function(e){"use strict";function t(e){e.call(this)}return e.default=(e,r)=>{const a=new WeakMap,n=new WeakMap,l=(e,t)=>{for(let r=0,{length:a}=e;r<a;r++){const{target:a,attributeName:l,oldValue:c}=e[r],o=a.getAttribute(l);n.get(t).call(a,l,c,o)}},c=e=>"querySelectorAll"in e,o=e=>{for(let t=0,{length:r}=e;t<r;t++){const{addedNodes:r,removedNodes:a}=e[t];s(r.filter(c),"c",new Set),s(a.filter(c),"d",new Set)}},s=(e,n,l)=>{for(let c=0,{length:o}=e;c<o;c++){const o=e[c];l.has(o)||(l.add(o),a.has(o)?a.get(o)[n].forEach(t,o):"c"===n&&r(o),s(o.querySelectorAll("*"),n,l))}},u=new MutationObserver(o);return u.observe(e,{childList:!0,subtree:!0}),(e,{connectedCallback:t,disconnectedCallback:r,observedAttributes:c,attributeChangedCallback:s})=>{o(u.takeRecords());const{c:d,d:i}=a.get(e)||(e=>{const t={c:new Set,d:new Set};return a.set(e,t),t})(e);if(c){const t=new MutationObserver(l);t.observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:c.map(t=>(e.hasAttribute(t)&&s.call(e,t,null,e.getAttribute(t)),t))}),n.set(t,s)}return r&&i.add(r),t&&(d.add(t),e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED||t.call(e)),e}},e}({}).default;
