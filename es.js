self.ce=function(e){"use strict";function t(e){e.call(this)}return e.default=(e,r,a)=>{const l=new WeakMap,n=new WeakMap,{filter:c}=[],o=(e,t)=>{for(let r=0,{length:a}=e;r<a;r++){const{target:a,attributeName:l,oldValue:c}=e[r],o=a.getAttribute(l);n.get(t).call(a,l,c,o)}},s=e=>"querySelectorAll"in e,u=e=>{if(a.length)for(let t=0,{length:r}=e;t<r;t++){const{addedNodes:r,removedNodes:a}=e[t];d(c.call(r,s),"c",new Set),d(c.call(a,s),"d",new Set)}},d=(e,n,c)=>{for(let o=0,{length:s}=e;o<s;o++){const s=e[o];c.has(s)||(c.add(s),l.has(s)?l.get(s)[n].forEach(t,s):"c"===n&&r(s),d(s.querySelectorAll(a),n,c))}},i=new MutationObserver(u);return i.observe(e,{childList:!0,subtree:!0}),(e,{connectedCallback:t,disconnectedCallback:r,observedAttributes:a,attributeChangedCallback:c})=>{u(i.takeRecords());const{c:s,d:d}=l.get(e)||(e=>{const t={c:new Set,d:new Set};return l.set(e,t),t})(e);if(a){const t=new MutationObserver(o);t.observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:a.map(t=>(e.hasAttribute(t)&&c.call(e,t,null,e.getAttribute(t)),t))}),n.set(t,c)}return r&&d.add(r),t&&(s.add(t),e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED||t.call(e)),e}},e}({}).default;
